<Window x:Class="VersInformer.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:local="clr-namespace:VersInformer.Client" 
        xmlns:tb="clr-namespace:Hardcodet.Wpf.TaskbarNotification;assembly=Hardcodet.Wpf.TaskbarNotification" 
        Icon="icon.png"
        Name="mainWindow"
        Title="Client Application" Height="544" Width="1063" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" WindowStartupLocation="CenterScreen" ShowInTaskbar="True">
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFE8F2F9" Offset="0"/>
            <GradientStop Color="#FFE8F2F9" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Window.Resources>
        <local:TranslateTransformToRectViewboxVisualBrushConverter x:Key="TranslateTransformToRectViewboxVisualBrushConverter"/>
        <System:Double x:Key="BlurRadius">10</System:Double>
        <Style x:Key="GlassButton" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder" 
                  CornerRadius="25" 
                  BorderThickness="4" 
                  Background="#AA4E4D4D"  
                  BorderBrush="#99FFFFFF"
                  RenderTransformOrigin="0.5,0.5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="1.7*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="ButtonContentPresenter"
                                VerticalAlignment="Center"  
                                HorizontalAlignment="Center" 
                                Grid.RowSpan="2" />
                            </Grid>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform" TargetName="ButtonBorder">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>


                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="SteelBlue"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ExpanderMenuListitemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2,4,2,4"/>
            <Setter Property="Foreground" Value="#FF2A485C"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Margin="20,0,20,1" x:Name="Bd" SnapsToDevicePixels="true" 
                              
                                BorderThickness="0,0,0,1" Padding="{TemplateBinding Padding}">
                            <Border.Background>
                                <SolidColorBrush Color="#002A485C" x:Name="colorBrush"/>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#442A485C" x:Name="colorBorderBrush"/>
                            </Border.BorderBrush>
                            <Grid>

                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform X="0" Y="0" x:Name="contentTranslate"/>
                                        </TransformGroup>
                                    </StackPanel.RenderTransform>
                                    <Image Source="images/cubes.png" Width="18" Height="18"/>
                                    <TextBlock x:Name="con" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5,0,0,0">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="#FF2A485C" x:Name="contentColor" />
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </StackPanel>
                                <Path Fill="#FF2A485C" Opacity="0" Stretch="Fill" HorizontalAlignment="Left" Margin="0,0,0,0" x:Name="path" VerticalAlignment="Center" Width="6.263" Height="8.354" RenderTransformOrigin="0.5,0.5" Data="M3.5546875,5.6352606 L7.7272134,9.8077869 L3.5546875,13.988776 L3.5546875,11.898281 L1.4641927,11.898281 L1.4641927,7.7257557 L3.5546875,7.7257557 z">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="-10" Y="0" x:Name="translateTransform"/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>

                                    <BeginStoryboard>

                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="contentColor" 
                                                            To="#FF000000" Duration="00:00:00.2" />
                                            <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="colorBrush" 
                                                            To="#FFC1DFFD" Duration="00:00:00.2" />
                                            <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="colorBorderBrush" 
                                                            To="#FF2A485C" Duration="00:00:00.2" />

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             Storyboard.TargetName="path" 
                                                             To="1"
                                                             Duration="00:00:00.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="X" 
                                                             Storyboard.TargetName="contentTranslate" 
                                                             To="10"
                                                             Duration="00:00:00.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="X" 
                                                             Storyboard.TargetName="translateTransform" 
                                                             To="0"
                                                             Duration="00:00:00.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="colorBorderBrush" 
                                                            To="#442A485C" Duration="00:00:00.2" />
                                            <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="contentColor" 
                                                            To="#FF2A485C" Duration="00:00:00.2" />
                                            <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="colorBrush" 
                                                            To="#002A485C" Duration="00:00:00.2" />
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             Storyboard.TargetName="path" 
                                                             To="0"
                                                             Duration="00:00:00.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="X" 
                                                             Storyboard.TargetName="contentTranslate" 
                                                             To="0"
                                                             Duration="00:00:00.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="X" 
                                                             Storyboard.TargetName="translateTransform" 
                                                             To="-10"
                                                             Duration="00:00:00.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFFFFFFF"/>
                                <Setter Property="Background" TargetName="Bd" Value="#FF2A485C"/>
                                <Setter Property="TextBlock.Foreground" TargetName="con" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF2A485C"/>
                                <Setter Property="TextBlock.Foreground" TargetName="con" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!---->
       

        <Style x:Key="ShadowTemplate" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Grid x:Name="Grid2" VerticalAlignment="Stretch" Height="Auto" RenderTransformOrigin="0.5,0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.550727591128872*" />
                                <RowDefinition Height="0.449272408871128*" />
                            </Grid.RowDefinitions>
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="LayoutScaleTransform2" ScaleX="1" ScaleY="1"/>
                                </TransformGroup>
                            </Grid.RenderTransform>


                            <Rectangle Fill="Transparent" RadiusX="5" RadiusY="5" StrokeThickness="3" StrokeMiterLimit="2" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeLineJoin="Miter" Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="4" Margin="0,2,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="#08000000" />
                            <Rectangle Fill="Transparent" RadiusX="5" RadiusY="5" StrokeThickness="2" StrokeMiterLimit="2" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeLineJoin="Miter" Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="4" Margin="1,3,1,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="#16000000" />
                            <Rectangle Fill="Transparent" RadiusX="5" RadiusY="5" StrokeThickness="1" StrokeMiterLimit="2" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeLineJoin="Miter" Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="4" Margin="2,4,2,4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="#24000000" />
                            <Rectangle Fill="Transparent" RadiusX="5" RadiusY="5" StrokeThickness=".5" StrokeMiterLimit="2" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeLineJoin="Miter" Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="4" Margin="3,5,3,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="#32000000" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpandCollapseToggle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="borer" BorderThickness="1" CornerRadius="2" BorderBrush="{x:Null}">
                            <Border x:Name="innerBorer" BorderThickness="1" CornerRadius="2" BorderBrush="#00FFFFFF">
                                <Grid>
                                    <Grid x:Name="BGCollection" Opacity="0">
                                        <Rectangle x:Name="rectangle" Opacity="1" RadiusX="1" RadiusY="1" Stroke="{x:Null}">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF447EB5" Offset="1"/>
                                                    <GradientStop Color="#FF2A66A0" Offset="0.553"/>
                                                    <GradientStop Color="#FF518CC5" Offset="0"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Path Stretch="Fill" Stroke="{x:Null}" x:Name="rectangle_Copy" Opacity="0.375" Data="M0,2 C0,0.8954305 0.8954305,0 2,0 L14,0 C15.104569,0 16,0.8954305 16,2 16,2 13.457782,7.6705051 8.5416319,7.9884741 3.242181,8.3312344 0,14.57723 0,14 z" Margin="0,0,0,0">
                                            <Path.Fill>
                                                <LinearGradientBrush EndPoint="0.059,0.063" StartPoint="0.685,0.765">
                                                    <GradientStop Color="#00F8BDB1" Offset="1"/>
                                                    <GradientStop Color="#FF969696" Offset="0"/>
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                    </Grid>

                                    <Path x:Name="path" Fill="{x:Null}" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
        								Height="9" 
        								RenderTransformOrigin="0.5,0.5" 
        								Data="M4.5,2.0956774L8.25,5.8456774 4.5,9.5956774" Stroke="#FFEBF6FF" Margin="9.293,0,5.707,0">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="path_Copy" Fill="{x:Null}" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
        								RenderTransformOrigin="0.5,0.5" 
        								Data="M4.5,2.0956774L8.25,5.8456774 4.5,9.5956774" Stroke="#FFEBF6FF" Margin="5.218,6,9.782,6">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>

                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="path_Copy" Value="M6.75,2.0956774L3,5.8456774 6.75,9.5956774"/>
                                <Setter Property="Data" TargetName="path" Value="M6.75,2.0956774L3,5.8456774 6.75,9.5956774"/>
                                <Setter Property="Width" TargetName="path" Value="6"/>
                                <Setter Property="Width" TargetName="path_Copy" Value="6"/>
                                <Setter Property="Height" TargetName="path_Copy" Value="9"/>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>

                                <Setter Property="Opacity" TargetName="BGCollection" Value="1"/>
                                <Setter Property="Fill" TargetName="path_Copy" Value="#FFFFFFFF"/>

                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>

                                <Setter Property="Opacity" TargetName="BGCollection" Value="1"/>
                                <Setter Property="Fill" TargetName="path" Value="#FFFFFFFF"/>
                            </MultiTrigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!--Expnader Style-->
        <ScaleTransform ScaleX=".9" ScaleY=".9" x:Key="paginationbuttonScale"/>
        <DataTemplate x:Key="rotaitonTemplate">
            <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}">

                <ContentPresenter.LayoutTransform>
                    <RotateTransform Angle="-90" />
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
        </DataTemplate>

        <Style x:Key="LeftPanelCollpasedButtonStyle" TargetType="{x:Type ToggleButton}">


            <Setter Property="Foreground" Value="White"/>

            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,0,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderBrush="#FF283239" BorderThickness="1,1,1,1" Width="{TemplateBinding Width}" Height="Auto" >
                            <Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" x:Name="border" Background="#FF9DACB6" Padding="5,5,5,5">
                                <Grid ClipToBounds="False">
                                    <ContentPresenter RenderTransformOrigin="0.5,0.5" x:Name="con" HorizontalAlignment="Center" TextBlock.TextAlignment="Center" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content}" 
                                                      VerticalAlignment="Center">

                                    </ContentPresenter>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Width" Value="30">
                                <Setter Property="ContentTemplate" TargetName="con" Value="{DynamicResource rotaitonTemplate}"/>
                                <Setter Property="Height" Value="250"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="1.071,0.5" StartPoint="0.107,0.5">
                                            <GradientStop Color="#FF283B48" Offset="0.434"/>
                                            <GradientStop Color="#FF4A677A" Offset="0"/>
                                            <GradientStop Color="#FF243643" Offset="0.82"/>
                                            <GradientStop Color="#FF304655" Offset="0.425"/>
                                            <GradientStop Color="#FF567992" Offset="1"/>
                                            <GradientStop Color="#FF385061" Offset="0.425"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF0D5F7E" Offset="0"/>
                                            <GradientStop Color="#FF527F8F" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="RenderTransform" Value="{DynamicResource paginationbuttonScale}" TargetName="con"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                <Setter Property="Background" TargetName="border" Value="#FF304655"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="RightExpander" TargetType="{x:Type Expander}">
            <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ToggleButton  Width="{TemplateBinding ActualWidth}"   Margin="0,1,0,1" MinHeight="0" MinWidth="30" x:Name="HeaderSite" 
                                              Style="{StaticResource LeftPanelCollpasedButtonStyle}" Content="{TemplateBinding Header}" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" 
                                              FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" 
                                              FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" 
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Padding="{TemplateBinding Padding}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"/>

                    <Popup  x:Name="popup" AllowsTransparency="True"  IsOpen="False" Placement="Bottom" PlacementTarget="{Binding ElementName=HeaderSite}">
                        <Grid>

                            <ContentControl x:Name="shadow" Visibility="Collapsed" HorizontalAlignment="Stretch" Style="{DynamicResource ShadowTemplate}" 
						VerticalAlignment="Stretch" Content="ContentControl"  Opacity="1" 
						Margin="2,0,2,0" Foreground="#FF000000"/>
                            <ContentPresenter Opacity="1" MinWidth="220"  HorizontalAlignment="Left" Margin="0,0,0,0" x:Name="ExpandSite" Focusable="false" Visibility="Collapsed" VerticalAlignment="Top" />
                        </Grid>

                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>

                <Trigger Property="IsExpanded" Value="true">
                    <Setter TargetName="shadow" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="popup" Property="Placement" Value="Right"/>
                    <Setter TargetName="popup" Property="HorizontalOffset" Value="-5"/>
                    <Setter TargetName="popup" Property="IsOpen" Value="true"/>
                    <Setter TargetName="ExpandSite" Property="Margin" Value="5,5,5,5"/>

                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>


                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="BottomExpander" TargetType="{x:Type Expander}">
            <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ToggleButton  Width="{TemplateBinding ActualWidth}"   Margin="0,1,0,1" MinHeight="0" MinWidth="30" x:Name="HeaderSite" 
                                              Style="{StaticResource LeftPanelCollpasedButtonStyle}" Content="{TemplateBinding Header}" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" 
                                              FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" 
                                              FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" 
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Padding="{TemplateBinding Padding}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"/>
                    <Grid x:Name="contentGrid" Grid.Row="1" >

                        <ContentPresenter Opacity="1"  HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="ExpandSite" Focusable="false" Visibility="Collapsed" VerticalAlignment="Top" />
                    </Grid>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>

                <Trigger Property="IsExpanded" Value="true">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter TargetName="ExpandSite" Property="Visibility" Value="Collapsed"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style x:Key="OutlookStyleExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template" Value="{DynamicResource BottomExpander}">

            </Setter>
            <Style.Triggers>
                <Trigger Property="ActualWidth" Value="30">
                    <Setter Property="Template" Value="{DynamicResource RightExpander}"/>
                </Trigger>

            </Style.Triggers>
        </Style>

        <!--ExpanderStyle Ends-->


        <Storyboard x:Key="OnUnChecked" FillBehavior="HoldEnd"  >
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Menucontainer" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames FillBehavior="Stop" BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="processMangerExpander" Storyboard.TargetProperty="(Expander.IsExpanded)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="leftmenuPanelHeaderText" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>



        <Storyboard x:Key="OnChecked" FillBehavior="HoldEnd"  >
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Menucontainer" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="250"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames FillBehavior="Stop" BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="processMangerExpander" Storyboard.TargetProperty="(Expander.IsExpanded)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="leftmenuPanelHeaderText" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <!---->
        
        
    </Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="ExpandCollapseToggle">
			<BeginStoryboard Storyboard="{StaticResource OnChecked}" />
		</EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="ExpandCollapseToggle">
			<BeginStoryboard Storyboard="{StaticResource OnUnChecked}" />
		</EventTrigger>
		<EventTrigger RoutedEvent="FrameworkElement.SizeChanged">
            <BeginStoryboard >
                <Storyboard >
                    <BooleanAnimationUsingKeyFrames FillBehavior="Stop"  BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="processMangerExpander" Storyboard.TargetProperty="(Expander.IsExpanded)">
                        <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
	
	</Window.Triggers>
    <Grid x:Name="LayoutRoot">
        <tb:TaskbarIcon Name="taskBarIcon"
          IconSource="/greenIcon.ico"
          ToolTipText="hello world">
            <tb:TaskbarIcon.TrayToolTip>
                <Border
                  Background="White"
                  BorderBrush="Orange"
                  BorderThickness="2"
                  CornerRadius="4"
                  Opacity="0.8"
                  Width="160"
                  Height="40">
                  <TextBlock
                    Text="hello world"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    />
                 </Border>
              </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="5"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border BorderBrush="#4CFFFFFF" BorderThickness="1,1,1,1" x:Name="LeftMenuBorder" CornerRadius="3,3,3,3" Grid.ColumnSpan="1">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFE8F2F9" Offset="0"/>
						<GradientStop Color="#FFE8F2F9" Offset="1"/>
					</LinearGradientBrush>
				</Border.Background>
				
				<Border>
					<Border BorderBrush="#99FFFFFF" BorderThickness="1,1,1,1" Padding="0,0,0,0" CornerRadius="1,1,1,1">
						<Grid> 
							<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" 
								Grid.Row="1" x:Name="LeftmenuTopHeaderContainer">
								<Grid Visibility="Hidden">
									<TextBlock Text="cdasda" x:Name="leftmenuPanelHeaderText"  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="#FFFFFFFF" FontSize="14" FontFamily="Calibri"/>
									<StackPanel HorizontalAlignment="Right" Width="Auto" Orientation="Horizontal">
										<ContentControl Style="{DynamicResource SplitterBG}" Content="ContentControl" Width="1" Height="25"/>
										<ToggleButton IsChecked="True" Height="Auto"  Style="{DynamicResource ExpandCollapseToggle}" 
											Width="25" x:Name="ExpandCollapseToggle"/>
									</StackPanel>
								</Grid>
							</Border>
							<Border Grid.Row="2" x:Name="Menucontainer" Margin="0,3,0,0" Width="250">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="47*"/>
										<ColumnDefinition Width="3*"/>
									</Grid.ColumnDefinitions>
                                 <Grid.RowDefinitions>
                                     <RowDefinition Height="Auto"/>
                                     <RowDefinition Height="Auto"/>
                                 </Grid.RowDefinitions>
									
									<Expander Header="Server Connection" Style="{DynamicResource OutlookStyleExpanderStyle}" IsExpanded="{Binding ElementName=ExpandCollapseToggle, Path=IsChecked}" x:Name="processMangerExpander" Grid.RowSpan="1" Grid.ColumnSpan="2" >
										<Border>
											<Grid> 
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="75"></RowDefinition>
                                                    <RowDefinition Height="75"></RowDefinition>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <StackPanel Grid.Row="0">
                                                    <Label Content="Nick"></Label>
												    <TextBox Name="txtNickName" Width="200" Height="25" Template="{StaticResource TextBoxBaseControlTemplate}" VerticalContentAlignment="Center"></TextBox>
                                                </StackPanel>
                                                <StackPanel Grid.Row="1">
                                                    <Label Content="Server IP"></Label>
												    <TextBox Name="txtServerIP" Width="200" Height="25" Template="{StaticResource TextBoxBaseControlTemplate}" VerticalContentAlignment="Center"></TextBox>
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical" Grid.Row="2">
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                        <Button Name="btnConnect" Height="50" Width="100" Content="Connect" Grid.Row="2" Grid.Column="0" Style="{DynamicResource GlassButton}" Click="btnConnect_Click" />
                                                        <Button Name="btnDisconnect" Height="50" Width="100" Content="Disconnect" Grid.Row="2" Grid.Column="0" Style="{DynamicResource GlassButton}" Click="btnDisconnect_Click" />
                                                    </StackPanel>
                                                    <StackPanel>
                                                        <Label Name="lblConnectionStatus" Content="Connection Status" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                                            <Label.Background> 
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" > 
                                                                    <GradientStop Color="Red" Offset="0.1" /> 
                                                                    <GradientStop Color="DarkRed" Offset="0.25" />   
                                                                    <GradientStop Color="DarkRed" Offset="0.75" /> 
                                                                    <GradientStop Color="Red" Offset="1.0" /> 
                                                                </LinearGradientBrush> 
                                                            </Label.Background>
                                                        </Label>
                                                    </StackPanel>
                                                </StackPanel>
											</Grid>
										</Border>
									</Expander> 
                                  
								</Grid>
							</Border>  
						</Grid>
					</Border>
				</Border>
			</Border>
			<Border Grid.Column="2" CornerRadius="3,3,3,3">
				<Grid>
                    
                        <Rectangle>  
                            <Rectangle.Effect>  
                                <BlurEffect Radius="{DynamicResource BlurRadius}"/>  
                            </Rectangle.Effect>  
                            <Rectangle.Fill>  
                                <VisualBrush  
                                    ViewboxUnits="Absolute"  
                                    Viewbox="{Binding RenderTransform.Children[3],  
                        Converter={StaticResource TranslateTransformToRectViewboxVisualBrushConverter},  
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},  
                        UpdateSourceTrigger=PropertyChanged}"  
                        AlignmentX="Left" AlignmentY="Top"  
                        Visual="{Binding ElementName=BackgroundContainer}" Stretch="None">  
                            <VisualBrush.Transform>  
                                <TranslateTransform X="0" />  
                            </VisualBrush.Transform>  
                        </VisualBrush>  
                    </Rectangle.Fill>  
                </Rectangle>  
                    
					<ListBox Name="lbMessage" Grid.Column="0" BorderThickness="1" BorderBrush="CadetBlue" Margin="0,10,10,53">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="SteelBlue" CornerRadius="5" VerticalAlignment="Center">
                                    <StackPanel Orientation="Vertical">
                                        <Label Height="25" Content="{ Binding From}" FontWeight="Bold"></Label>
                                        <Label Margin="10,0,0,0" Content="{ Binding Message}"></Label>
                                    </StackPanel>
                                </Border> 
                            </DataTemplate>
                        </ListBox.ItemTemplate> 
                    </ListBox>
                    <TextBox Name="txtMessage" BorderThickness="1" BorderBrush="Black" Margin="0,0,106,10" Height="38" VerticalAlignment="Bottom" Template="{StaticResource TextBoxBaseControlTemplate}" VerticalContentAlignment="Top" TextWrapping="Wrap" KeyDown="txtMessage_KeyDown"/>
                    <Button Content="Send" Name="btnSendMessage" Margin="0,0,10,10" Click="btnSendMessage_Click" Height="38" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="91" Style="{DynamicResource GlassButton}"/>
                    <!--

                    <Button Content="Connect" Name="btnConnect" Width="100" Height="25" Grid.Row="0" HorizontalAlignment="Left" Margin="25,0,0,0" Click="btnConnect_Click"></Button>
                    <Button Content="Disconnect" Name="btnDisconnect" Width="100" Height="25" Grid.Row="0" HorizontalAlignment="Left" Margin="150,0,0,0" Click="btnDisconnect_Click"></Button>-->

        </Grid>
        </Border>
        </Grid>
        </Grid>
</Window>
